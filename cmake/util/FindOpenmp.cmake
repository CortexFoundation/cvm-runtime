if(APPLE)
	if(CMAKE_C_COMPILER_ID MATCHES "Clang")
		set(OpenMP_C "${CMAKE_C_COMPILER}")
		set(OpenMP_C_FLAGS "-fopenmp=libomp -Wno-unused-command-line-argument")
		set(OpenMP_C_LIB_NAMES "libomp" "libgomp" "libiomp5")
		set(OpenMP_libomp_LIBRARY ${OpenMP_C_LIB_NAMES})
		set(OpenMP_libgomp_LIBRARY ${OpenMP_C_LIB_NAMES})
		set(OpenMP_libiomp5_LIBRARY ${OpenMP_C_LIB_NAMES})
	endif()

	if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
	  set(OpenMP_CXX "${CMAKE_CXX_COMPILER}")
	  set(OpenMP_CXX_FLAGS "-fopenmp=libomp -Wno-unused-command-line-argument")
	  set(OpenMP_CXX_LIB_NAMES "libomp" "libgomp" "libiomp5")
	  set(OpenMP_libomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
	  set(OpenMP_libgomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
	  set(OpenMP_libiomp5_LIBRARY ${OpenMP_CXX_LIB_NAMES})
	endif()

	set(CMAKE_C_FLAGS "-I/usr/local/opt/libomp/include ${CMAKE_C_FLAGS}")
	set(CMAKE_CXX_FLAGS "-I/usr/local/opt/libomp/include ${CMAKE_CXX_FLAGS}")
else()
  find_package(openmp QUIET)
  if(openmp_found)
    message(status "OPENMP found")
    set(cmake_c_flags "${cmake_c_flags} ${openmp_c_flags}")
    set(cmake_cxx_flags "${cmake_cxx_flags} ${openmp_cxx_flags}")
    set(cmake_exe_linker_flags
      "${cmake_exe_linker_flags} ${openmp_exe_linker_flags}")
  endif()

	set(CMAKE_C_FLAGS "-fopenmp ${CMAKE_C_FLAGS}")
	set(CMAKE_CXX_FLAGS "-fopenmp ${CMAKE_CXX_FLAGS}")
endif()
